/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Processe;

import Algorithm.Algorithm;
import SecureAlgorithmHash.SHA1;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.security.NoSuchAlgorithmException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author banhm
 */
public class MainView extends javax.swing.JFrame {

    /**
     * Creates new form MainView
     */
    static int bitleg;
    static BigInteger cipherText;
    static Algorithm rsa;

    public MainView() {
        initComponents();
        ProcessCrt(false, false);

        bitleg = Integer.parseInt((String) cbKeySize.getSelectedItem());
        rsa = new Algorithm();
        rsa.keyRSA(bitleg);
        this.setLocation(300, 100);
        this.setResizable(false);
        this.pb.setStringPainted(true);
        this.pb.setForeground(Color.red);
        
    }

    private void ProcessCrt(boolean a, boolean b) {
        txtInputSender.setEnabled(a);
        txtInputReceiver.setEditable(a);
        btnInputSender.setEnabled(a);
        btnInputReceiver.setEnabled(a);
        btnCreateSignature.setEnabled(a);
        btnCheck.setEnabled(a);
        btnSavePrivateK.setEnabled(a);
        btnSavePublicK.setEnabled(a);
        btnSaveSignature.setEnabled(a);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnCreateK = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbKeySize = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnSavePrivateK = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnSavePublicK = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtPrivateK = new javax.swing.JTextArea();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtPublicK = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtInputSender = new javax.swing.JTextField();
        btnInputSender = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtSHA1Sender = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtSignature = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        btnSaveSignature = new javax.swing.JButton();
        btnCreateSignature = new javax.swing.JButton();
        lb3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtInputReceiver = new javax.swing.JTextField();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtDecrypt = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        txtSHA1Receiver = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        btnInputReceiver = new javax.swing.JButton();
        btnCheck = new javax.swing.JButton();
        lb4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        pb = new javax.swing.JProgressBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuprinciples = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Digital Signature Software", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 36))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 204, 204));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/logo.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(0, 255, 255));

        btnCreateK.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnCreateK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/vcard_key.png"))); // NOI18N
        btnCreateK.setText("Create Key");
        btnCreateK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateKActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/key_start.png"))); // NOI18N
        jLabel2.setText("Key");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Key Size");

        cbKeySize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "256", "512", "1024", "2048", "3072" }));
        cbKeySize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKeySizeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Private Key");

        btnSavePrivateK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/disk_black.png"))); // NOI18N
        btnSavePrivateK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePrivateKActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Public Key");

        btnSavePublicK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/disk_black.png"))); // NOI18N
        btnSavePublicK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePublicKActionPerformed(evt);
            }
        });

        txtPrivateK.setColumns(20);
        txtPrivateK.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        txtPrivateK.setLineWrap(true);
        txtPrivateK.setRows(5);
        txtPrivateK.setWrapStyleWord(true);
        jScrollPane7.setViewportView(txtPrivateK);

        txtPublicK.setColumns(20);
        txtPublicK.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        txtPublicK.setLineWrap(true);
        txtPublicK.setRows(5);
        txtPublicK.setWrapStyleWord(true);
        jScrollPane9.setViewportView(txtPublicK);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSavePublicK, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSavePrivateK, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(cbKeySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(btnCreateK)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbKeySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(btnSavePrivateK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(btnSavePublicK))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreateK)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 255, 255));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/user_star.png"))); // NOI18N
        jLabel8.setText("Sender");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Input");

        btnInputSender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/folder_up.png"))); // NOI18N
        btnInputSender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputSenderActionPerformed(evt);
            }
        });

        txtSHA1Sender.setColumns(20);
        txtSHA1Sender.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        txtSHA1Sender.setLineWrap(true);
        txtSHA1Sender.setRows(5);
        txtSHA1Sender.setWrapStyleWord(true);
        jScrollPane8.setViewportView(txtSHA1Sender);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("SHA-1");

        txtSignature.setColumns(20);
        txtSignature.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        txtSignature.setLineWrap(true);
        txtSignature.setRows(5);
        txtSignature.setWrapStyleWord(true);
        jScrollPane10.setViewportView(txtSignature);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Signature's create");

        btnSaveSignature.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/disk_black.png"))); // NOI18N
        btnSaveSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveSignatureActionPerformed(evt);
            }
        });

        btnCreateSignature.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnCreateSignature.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/shield_start.png"))); // NOI18N
        btnCreateSignature.setText("Create Signature");
        btnCreateSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateSignatureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(txtInputSender)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnInputSender))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel3Layout.createSequentialGroup()
                                                    .addComponent(jLabel13)
                                                    .addGap(0, 0, Short.MAX_VALUE))
                                                .addGroup(jPanel3Layout.createSequentialGroup()
                                                    .addGap(40, 40, 40)
                                                    .addComponent(lb3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnSaveSignature, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 21, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(btnCreateSignature)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtInputSender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInputSender))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSaveSignature)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreateSignature, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(0, 255, 255));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/user_mature.png"))); // NOI18N
        jLabel9.setText("Receiver");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Input");

        txtDecrypt.setColumns(20);
        txtDecrypt.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        txtDecrypt.setLineWrap(true);
        txtDecrypt.setRows(5);
        txtDecrypt.setWrapStyleWord(true);
        jScrollPane11.setViewportView(txtDecrypt);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("SHA-1");

        txtSHA1Receiver.setColumns(20);
        txtSHA1Receiver.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        txtSHA1Receiver.setLineWrap(true);
        txtSHA1Receiver.setRows(5);
        txtSHA1Receiver.setWrapStyleWord(true);
        jScrollPane12.setViewportView(txtSHA1Receiver);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Decrypt the signature");

        btnInputReceiver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/folder_up.png"))); // NOI18N
        btnInputReceiver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputReceiverActionPerformed(evt);
            }
        });

        btnCheck.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/shield_rainbow.png"))); // NOI18N
        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/reset.png"))); // NOI18N
        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btnCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(txtInputReceiver, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnInputReceiver))))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(lb4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtInputReceiver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnInputReceiver))
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheck)
                    .addComponent(jButton1))
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(pb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        menuprinciples.setText("Principles");
        menuprinciples.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuprinciplesActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Show");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuprinciples.add(jMenuItem1);

        jMenuBar1.add(menuprinciples);

        jMenu2.setText("Help");

        jMenuItem2.setText("Nguyễn Anh Tuấn");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateKActionPerformed
        // TODO add your handling code here:
        this.pb.setIndeterminate(true);
        rsa.keyRSA(bitleg);
        lb3.setText("has the private Key");
        lb3.setForeground(Color.red);
        lb4.setText("has the public Key");
        lb4.setForeground(Color.red);
        txtPrivateK.setText(rsa.getE().toString());
        txtPublicK.setText(rsa.getD().toString());

        rsa.setD(new BigInteger(txtPrivateK.getText()));
        rsa.setE(new BigInteger(txtPublicK.getText()));
        ProcessCrt(true, false);
        //System.out.println(bitleg);
        //JOptionPane.showMessageDialog(null, "Tạo khóa thành công", "Notify", 1);
        pb.setMaximum(100);
        pb.setValue(200);
        pb.setIndeterminate(false);
    }//GEN-LAST:event_btnCreateKActionPerformed

    private void cbKeySizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKeySizeActionPerformed
        // TODO add your handling code here:
        bitleg = Integer.parseInt((String) cbKeySize.getSelectedItem());

    }//GEN-LAST:event_cbKeySizeActionPerformed

    private void btnInputSenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputSenderActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("pdf", "docx", "doc", "exe", "xls", "xlsx", "jpg", "png", "mp3", "mp4", "flv", "ico", "txt");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            String attach = file.toString();
            txtInputSender.setText(attach);
        }

    }//GEN-LAST:event_btnInputSenderActionPerformed

    private void btnCreateSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateSignatureActionPerformed
        // TODO add your handling code here:
        this.pb.setValue(0);
        String fileName = txtInputSender.getText();// change accordingly
        fileName = fileName.replace('\\', '/');
        if ("".equals(fileName)) {
            pb.setIndeterminate(true);
            JOptionPane.showMessageDialog(null, "You have not entered data input", "Notify", 1);
            pb.setMaximum(200);
            pb.setValue(0);
            pb.setIndeterminate(false);

        } else {
            SHA1 sha1 = new SHA1();
            try {
                pb.setIndeterminate(true);
                BigInteger sh1 = new BigInteger(sha1.md(fileName).abs().toString());
                txtSHA1Sender.setText(sh1.toString());
                BigInteger sh11 = new BigInteger(txtSHA1Sender.getText());
                txtSignature.setText(rsa.encrypt(sh11).toString());//ký
                
                pb.setMaximum(200);
                pb.setValue(200);
                pb.setIndeterminate(false);
                JOptionPane.showMessageDialog(null, "Đã tạo chữ ký thành công", "Notify", 1);

            } catch (IOException | NoSuchAlgorithmException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnCreateSignatureActionPerformed

    private void btnInputReceiverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputReceiverActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("pdf", "exe", "doc", "docx", "xls", "xlsx", "jpg", "png", "mp3", "mp4", "flv", "ico", "txt");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            String attach = file.toString();
            txtInputReceiver.setText(attach);
        }
    }//GEN-LAST:event_btnInputReceiverActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
        this.pb.setValue(0);
        String fileName = txtInputReceiver.getText();
        fileName = fileName.replace('\\', '/');
        if ("".equals(fileName)) {
            pb.setIndeterminate(true);
            JOptionPane.showMessageDialog(null, "You have not entered data input", "Notify", 1);

            pb.setMaximum(200);
            pb.setValue(0);
            pb.setIndeterminate(false);
            
        }else {
            SHA1 sha1 = new SHA1();
            try {
                pb.setIndeterminate(true);
                txtSHA1Receiver.setText(sha1.md(fileName).abs().toString());

                BigInteger dsrsa = new BigInteger(txtSignature.getText());
                txtDecrypt.setText(rsa.decrypt(dsrsa).toString());
                pb.setMaximum(200);
                pb.setValue(200);
                pb.setIndeterminate(false);
                if (txtSHA1Receiver.getText().equals(txtDecrypt.getText())) {
                    JOptionPane.showMessageDialog(null, "Chữ ký vẹn toàn, không bị thay đổi", "Notify", 1);
                } else {
                    JOptionPane.showMessageDialog(null, "Chữ ký Không vẹn toàn, đã bị thay đổi", "Notify", 1);
                }
            } catch (HeadlessException | IOException | NoSuchAlgorithmException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnCheckActionPerformed

    private void menuprinciplesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuprinciplesActionPerformed

    }//GEN-LAST:event_menuprinciplesActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Principles().setVisible(true);
//            }
//        });
        Show s = new Show();
        
        s.setVisible(true);
       
        //p.setVisible(true);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void OutputWrite(File saveLocation, BigInteger EncryptCodes, String name)
            throws FileNotFoundException {

        PrintWriter file
                = new PrintWriter(new FileOutputStream(new File(saveLocation, name)));
        file.println(EncryptCodes);
        file.close();

    }

    private File getSaveLocation() {
        //File file = new File("E:\\Socket_oop\\FileTransfer_Client");
        
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setCurrentDirectory(file);
        int result = chooser.showSaveDialog(this);

        if (result == chooser.APPROVE_OPTION) {
            return chooser.getSelectedFile();
        } else {
            return null;
        }
    }
    private void btnSavePrivateKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePrivateKActionPerformed
        // TODO add your handling code here:
        if (this.txtPrivateK.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Bạn chưa tạo khóa", "Notify", 1);
        } else {
            BigInteger bigInteger = new BigInteger(txtPrivateK.getText());
            try {
                OutputWrite(getSaveLocation(), bigInteger, "PrivateKey.txt");
            } catch (FileNotFoundException e) {
            }
        }
    }//GEN-LAST:event_btnSavePrivateKActionPerformed

    private void btnSavePublicKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePublicKActionPerformed
        // TODO add your handling code here:
        if (this.txtPublicK.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Bạn chưa tạo khóa", "Notify", 1);
        } else {
            BigInteger bigInteger = new BigInteger(txtPublicK.getText());
            try {
                OutputWrite(getSaveLocation(), bigInteger, "PublicKey.txt");
            } catch (FileNotFoundException e) {
            }
        }
    }//GEN-LAST:event_btnSavePublicKActionPerformed

    private void btnSaveSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveSignatureActionPerformed
        // TODO add your handling code here:
        if (this.txtSignature.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Bạn chưa tạo chữ ký", "Notify", 1);
        } else {
            BigInteger bigInteger = new BigInteger(txtSignature.getText());
            try {
                OutputWrite(getSaveLocation(), bigInteger, "DigitalSignature.txt");
            } catch (FileNotFoundException e) {
            }
        }
    }//GEN-LAST:event_btnSaveSignatureActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        pb.setValue(0);
        this.lb3.setText(null);
        this.lb4.setText(null);
        cbKeySize.setSelectedIndex(0);
        ProcessCrt(false, false);
        this.txtDecrypt.setText(null);
        this.txtInputReceiver.setText(null);
        this.txtInputSender.setText(null);
        this.txtPrivateK.setText(null);
        this.txtPublicK.setText(null);
        this.txtSHA1Receiver.setText(null);
        this.txtSHA1Sender.setText(null);
        this.txtSignature.setText(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        ahihi ahihi = new ahihi();
        ahihi.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnCreateK;
    private javax.swing.JButton btnCreateSignature;
    private javax.swing.JButton btnInputReceiver;
    private javax.swing.JButton btnInputSender;
    private javax.swing.JButton btnSavePrivateK;
    private javax.swing.JButton btnSavePublicK;
    private javax.swing.JButton btnSaveSignature;
    private javax.swing.JComboBox<String> cbKeySize;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lb3;
    private javax.swing.JLabel lb4;
    private javax.swing.JMenu menuprinciples;
    private javax.swing.JProgressBar pb;
    private javax.swing.JTextArea txtDecrypt;
    private javax.swing.JTextField txtInputReceiver;
    private javax.swing.JTextField txtInputSender;
    private javax.swing.JTextArea txtPrivateK;
    private javax.swing.JTextArea txtPublicK;
    private javax.swing.JTextArea txtSHA1Receiver;
    private javax.swing.JTextArea txtSHA1Sender;
    private javax.swing.JTextArea txtSignature;
    // End of variables declaration//GEN-END:variables

}
